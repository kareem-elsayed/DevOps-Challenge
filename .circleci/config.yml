version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.6.1

      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
     
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python tests/test.py

      - store_artifacts:
          path: test-reports
          destination: test-reports
  dev:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python tests/test.py

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - run:
          name: Build Image
          command: |
            docker build -t web-app .

      - run:
          name: Push Image
          command: |
            docker login --username=${DOCKER_USER} --password=${DOCKER_PASSWORD}
            docker tag web-app keko00/web-app:dev-${CIRCLE_SHA1:0:10}
            docker push keko00/web-app:dev-${CIRCLE_SHA1:0:10}

            docker tag web-app keko00/web-app:latest-dev
            docker push keko00/web-app:latest-dev
#      - run:
#          name: Deployment
#          command: |
#            ssh-keyscan ${JUMP_HOST} >> ~/.ssh/known_hosts
#            ssh ${DEV_USER}@${JUMP_HOST} "helm upgrade --force --namespace dev --install   geo-ip-api devops/environments/dev/api/geo-ip-api --set=image.tag=dev-${CIRCLE_SHA1:0:10}"
workflows:
  version: 2
  build_and_test:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - dev
                - master
          context: dev
      - dev:
          filters:
            branches:
              only: dev
          context: dev
